/* 
 * engine/itemgen.ts
 *
 * This file contains the addItems function, which takes in a reference to the
 * game object and adds different items into the map (a flat array of rooms
 * generated by the generateMap function in mapgen.ts) based on what level the 
 * player is in.
 */

import * as components from "../components";
import { randInt, Vec, Rect, anyHitboxesCollide } from "../helpers";
import type Game from "../main";
import { type Entity } from "./ecs";
import { type Room } from "./room";

const newItem = (
    game: Game,
    room: Room,
    image: CanvasImageSource,
    frame: Rect,
    hitbox?: Rect
): Entity => {
    const entity = game.ecs.createEntity();

    // use provided hitbox or create a temporary one
    game.ecs.addComponent(
        entity,
        components.HitboxComponent,
        [hitbox ?? new Rect(0, 0, game.tileSize, game.tileSize)]
    );

    let pixelPos: Vec;

    do {
        // set position on tile grid then add random offset
        pixelPos = new Vec(
            (randInt(2, game.roomSize.x - 3) + Math.random() - .5) * game.tileSize,
            (randInt(2, game.roomSize.y - 3) + Math.random() - .5) * game.tileSize
        );

        game.ecs.addComponent(entity, components.PositionComponent, [pixelPos, room.pos]);
    } while (anyHitboxesCollide(game, entity, room));

    // if no hitbox was provided, remove the temporary one
    if (!hitbox) {
        game.ecs.componentManagers
            .get(components.HitboxComponent)
            .removeComponent(entity);
    }

    game.ecs.addComponent(entity, components.ImageComponent, [image, frame]);

    // allow all items to be picked up
    game.ecs.addComponent(entity, components.HoldableComponent);

    return entity;
};

export const addItems = (game: Game): void => {
    for (const room of game.rooms) { // for each room in the map
        // 5-10 logs in each room
        for (let i = 0; i < randInt(5, 10); i++) {
            newItem(
                game,
                room,
                game.images["items"],
                new Rect(0, 0, 16, 16),
                new Rect(1, 1, game.tileSize - 1, game.tileSize - 1)
            );
        }
    }

    // add a stick in the room the player starts in

    const stick = newItem(game, game.currentRoom, game.images["items"], new Rect(0, 16, 16, 16));

    game.ecs.addComponent(stick, components.WeaponComponent, [5]);
};